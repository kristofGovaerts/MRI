#!/usr/bin/env python
# -*- coding: CP1252 -*-
#
# generated by wxGlade 0.6.8 (standalone edition) on Thu Oct 24 21:11:09 2013
#

import wx
#from SSimports import *

# begin wxGlade: dependencies
import gettext
# end wxGlade
import os
import numpy as np
import glob
from SSimports import *
from ReadInput import *
from imageTypes import *

# Globals

t1_cbf=True
nti=14
t1bl=2400
ti=[300, 500, 700, 900, 1100, 1300, 1500, 1700, 2000, 2300, 2700, 3000, 3500, 4000]

t2noise=True
t2nonoise=False

dtifit=True
ec=False

scanlist=[]


consoletext="""wxScanSelection.py
Tool developed by Kristof Govaerts (kristof.govaerts@med.kuleuven.be)
-----------------------------------------------------------------------------------------
Console:
"""
# end wxGlade


class ScanSelectionFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: ScanSelectionFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)
        self.notebook_3 = wx.Notebook(self, wx.ID_ANY, style=0)
        self.notebook_processing = wx.Panel(self.notebook_3, wx.ID_ANY)
        self.label_ASL = wx.StaticText(self.notebook_processing, wx.ID_ANY, _("    ASL processing"))
        self.checkbox_ASL = wx.CheckBox(self.notebook_processing, wx.ID_ANY, _("T1/T1app fitting and perfusion calc"))
        self.label_2 = wx.StaticText(self.notebook_processing, wx.ID_ANY, _("Inversion times"))
        self.label_3 = wx.StaticText(self.notebook_processing, wx.ID_ANY, _("#TI:"))
        self.spin_ctrl_TI = wx.SpinCtrl(self.notebook_processing, wx.ID_ANY, "14", min=0, max=100)
        self.label_t1bl = wx.StaticText(self.notebook_processing, wx.ID_ANY, _("T1 blood (ms):"))
        self.text_ctrl_t1bl = wx.TextCtrl(self.notebook_processing, wx.ID_ANY, _("2400"), style=wx.TE_PROCESS_ENTER)
        self.label_4 = wx.StaticText(self.notebook_processing, wx.ID_ANY, _("TI (ms):"))
        self.text_ctrl_TI = wx.TextCtrl(self.notebook_processing, wx.ID_ANY, _("300,500,700,900,1100,1300,1500,1700,2000,2300,2700,3000,3500,4000"), style=wx.TE_MULTILINE)
        self.static_line_1 = wx.StaticLine(self.notebook_processing, wx.ID_ANY)
        self.label_T2 = wx.StaticText(self.notebook_processing, wx.ID_ANY, _("    T2 processing"))
        self.checkbox_T21 = wx.CheckBox(self.notebook_processing, wx.ID_ANY, _("Fit with noise offset"))
        self.checkbox_T22 = wx.CheckBox(self.notebook_processing, wx.ID_ANY, _("Fit without noise offset"))
        self.static_line_2 = wx.StaticLine(self.notebook_processing, wx.ID_ANY)
        self.label_Dif = wx.StaticText(self.notebook_processing, wx.ID_ANY, _("    Diffusion processing"))
        self.checkbox_DTI1 = wx.CheckBox(self.notebook_processing, wx.ID_ANY, _("Diffusion tensor fit"))
        self.checkbox_EC = wx.CheckBox(self.notebook_processing, wx.ID_ANY, _("Eddy current correction"))
        self.static_line_3 = wx.StaticLine(self.notebook_processing, wx.ID_ANY)
        self.label_7 = wx.StaticText(self.notebook_processing, wx.ID_ANY, _("Files"))
        self.label_8 = wx.StaticText(self.notebook_processing, wx.ID_ANY, _("Scan types"))
        self.scanlist = wx.ListBox(self.notebook_processing, wx.ID_ANY, choices=[], style=wx.LB_MULTIPLE)
        self.scantypes = wx.ListBox(self.notebook_processing, wx.ID_ANY, choices=[], style=wx.LB_MULTIPLE)
        self.run_button = wx.Button(self.notebook_processing, wx.ID_ANY, _("Process!"))
        self.browse_box = wx.TextCtrl(self.notebook_processing, wx.ID_ANY, "",style=wx.TE_PROCESS_ENTER)
        self.browseButton = wx.Button(self.notebook_processing, wx.ID_ANY, _("Browse..."))
        self.text_ctrl_2 = wx.TextCtrl(self.notebook_processing, wx.ID_ANY, _(consoletext), style=wx.TE_MULTILINE | wx.TE_READONLY)
        self.notebook_help = wx.Panel(self.notebook_3, wx.ID_ANY)
        self.Contents = wx.TreeCtrl(self.notebook_help, wx.ID_ANY, style=wx.TR_HAS_BUTTONS | wx.TR_DEFAULT_STYLE | wx.SUNKEN_BORDER)
        self.label_1 = wx.StaticText(self.notebook_help, wx.ID_ANY, _("Help for the wxScanSelection tool. \n\nClick on the options to the left to browse topics."))

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_CHECKBOX, self.T1_CBF_check, self.checkbox_ASL)
        self.Bind(wx.EVT_SPINCTRL, self.On_nTI_change, self.spin_ctrl_TI)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnT1Enter, self.text_ctrl_t1bl)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnTIEnter, self.text_ctrl_TI)
        self.Bind(wx.EVT_CHECKBOX, self.T2_noise_check, self.checkbox_T21)
        self.Bind(wx.EVT_CHECKBOX, self.T2_nonoise, self.checkbox_T22)
        self.Bind(wx.EVT_CHECKBOX, self.fit_diffusion, self.checkbox_DTI1)
        self.Bind(wx.EVT_CHECKBOX, self.correct_ec, self.checkbox_EC)
        self.Bind(wx.EVT_BUTTON, self.OnProcess, self.run_button)
        self.Bind(wx.EVT_TEXT_ENTER, self.OnBrowseText, self.browse_box)
        self.Bind(wx.EVT_BUTTON, self.OnBrowse, self.browseButton)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: ScanSelectionFrame.__set_properties
        self.SetTitle(_("frame_4"))
        self.label_ASL.SetMinSize((97, 20))
        self.label_ASL.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.BOLD, 1, ""))
        self.checkbox_ASL.SetMinSize((186, 13))
        self.checkbox_ASL.SetValue(1)
        self.label_2.SetMinSize((200, 20))
        self.label_3.SetMinSize((70, 13))
        self.spin_ctrl_TI.SetMinSize((130, 20))
        self.label_t1bl.SetMinSize((70, 20))
        self.text_ctrl_t1bl.SetMinSize((130, 20))
        self.label_4.SetMinSize((70, 20))
        self.text_ctrl_TI.SetMinSize((130, 60))
        self.label_T2.SetMinSize((90, 20))
        self.label_T2.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.BOLD, 1, ""))
        self.checkbox_T21.SetMinSize((112, 13))
        self.checkbox_T21.SetValue(1)
        self.checkbox_T22.SetMinSize((200, 20))
        self.label_Dif.SetMinSize((125, 20))
        self.label_Dif.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.BOLD, 1, ""))
        self.checkbox_DTI1.SetValue(1)
        self.label_7.SetMinSize((200, 20))
        self.label_8.SetMinSize((200, 20))
        self.scanlist.SetMinSize((200, 400))
        self.scantypes.SetMinSize((200, 400))
        self.run_button.SetMinSize((200, 20))
        self.browse_box.SetMinSize((400, 20))
        self.text_ctrl_2.SetMinSize((-1, 200))
        self.Contents.SetMinSize((200, 706))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: ScanSelectionFrame.__do_layout
        sizer_6 = wx.BoxSizer(wx.VERTICAL)
        sizer_7 = wx.FlexGridSizer(1, 3, 0, 0)
        grid_sizer_6 = wx.FlexGridSizer(2, 1, 0, 0)
        grid_sizer_1 = wx.FlexGridSizer(3, 2, 0, 0)
        grid_sizer_3 = wx.FlexGridSizer(1, 2, 0, 0)
        grid_sizer_2 = wx.FlexGridSizer(2, 3, 0, 0)
        grid_sizer_4 = wx.FlexGridSizer(6, 1, 0, 0)
        sizer_4 = wx.BoxSizer(wx.HORIZONTAL)
        sizer_3 = wx.BoxSizer(wx.VERTICAL)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_5 = wx.FlexGridSizer(3, 2, 0, 0)
        grid_sizer_4.Add((200, 20), 0, 0, 0)
        sizer_1.Add((20, 10), 0, 0, 0)
        sizer_1.Add(self.label_ASL, 0, 0, 0)
        sizer_1.Add(self.checkbox_ASL, 0, 0, 0)
        sizer_1.Add(self.label_2, 0, 0, 0)
        grid_sizer_5.Add(self.label_3, 0, 0, 0)
        grid_sizer_5.Add(self.spin_ctrl_TI, 0, 0, 0)
        grid_sizer_5.Add(self.label_t1bl, 0, 0, 0)
        grid_sizer_5.Add(self.text_ctrl_t1bl, 0, 0, 0)
        grid_sizer_5.Add(self.label_4, 0, 0, 0)
        grid_sizer_5.Add(self.text_ctrl_TI, 0, 0, 0)
        sizer_1.Add(grid_sizer_5, 1, wx.EXPAND, 0)
        sizer_1.Add((20, 10), 0, 0, 0)
        grid_sizer_4.Add(sizer_1, 1, wx.ALL | wx.EXPAND, 0)
        grid_sizer_4.Add(self.static_line_1, 0, wx.EXPAND, 0)
        sizer_2.Add((20, 10), 0, 0, 0)
        sizer_2.Add(self.label_T2, 0, 0, 0)
        sizer_2.Add(self.checkbox_T21, 0, 0, 0)
        sizer_2.Add(self.checkbox_T22, 0, 0, 0)
        sizer_2.Add((20, 10), 0, 0, 0)
        grid_sizer_4.Add(sizer_2, 1, wx.ALL | wx.EXPAND, 0)
        grid_sizer_4.Add(self.static_line_2, 0, wx.EXPAND, 0)
        sizer_3.Add((20, 10), 0, 0, 0)
        sizer_3.Add(self.label_Dif, 0, 0, 0)
        sizer_3.Add(self.checkbox_DTI1, 0, 0, 0)
        sizer_3.Add(self.checkbox_EC, 0, 0, 0)
        sizer_3.Add(self.static_line_3, 0, wx.EXPAND, 0)
        sizer_3.Add((200, 50), 0, 0, 0)
        sizer_3.Add((20, 10), 0, 0, 0)
        grid_sizer_4.Add(sizer_3, 1, wx.EXPAND, 0)
        grid_sizer_4.Add(sizer_4, 1, wx.EXPAND, 0)
        grid_sizer_4.Add((200, 30), 0, 0, 0)
        grid_sizer_1.Add(grid_sizer_4, 1, wx.EXPAND, 0)
        grid_sizer_2.Add(self.label_7, 0, 0, 0)
        grid_sizer_2.Add((20, 20), 0, 0, 0)
        grid_sizer_2.Add(self.label_8, 0, 0, 0)
        grid_sizer_2.Add(self.scanlist, 0, 0, 0)
        grid_sizer_2.Add((80, 400), 0, 0, 0)
        grid_sizer_2.Add(self.scantypes, 0, wx.EXPAND, 0)
        grid_sizer_1.Add(grid_sizer_2, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.run_button, 0, 0, 0)
        grid_sizer_3.Add(self.browse_box, 0, 0, 0)
        grid_sizer_3.Add(self.browseButton, 0, 0, 0)
        grid_sizer_1.Add(grid_sizer_3, 1, wx.EXPAND, 0)
        grid_sizer_6.Add(grid_sizer_1, 1, wx.EXPAND, 0)
        grid_sizer_6.Add(self.text_ctrl_2, 0, wx.EXPAND, 0)
        self.notebook_processing.SetSizer(grid_sizer_6)
        sizer_7.Add(self.Contents, 1, wx.EXPAND, 0)
        sizer_7.Add((10, 700), 0, 0, 0)
        sizer_7.Add(self.label_1, 0, 0, 0)
        self.notebook_help.SetSizer(sizer_7)
        self.notebook_3.AddPage(self.notebook_processing, _("Processing"))
        self.notebook_3.AddPage(self.notebook_help, _("Help"))
        sizer_6.Add(self.notebook_3, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_6)
        sizer_6.Fit(self)
        self.Layout()
        # end wxGlade

    def T1_CBF_check(self, event):  # wxGlade: ScanSelectionFrame.<event_handler>
        global t1_cbf
        t1_cbf=self.checkbox_ASL.GetValue()

    def On_nTI_change(self, event):  # wxGlade: ScanSelectionFrame.<event_handler>
        global nti
        nti=self.spin_ctrl_TI.GetValue()

    def OnT1Enter(self, event):  # wxGlade: ScanSelectionFrame.<event_handler>
        global t1bl
        try:
            t1bl=int(self.text_ctrl_t1bl.GetValue())
            print "New T1 of blood:", t1bl
        except ValueError:
            print "Invalid T1 value entered."
            self.text_ctrl_t1bl.SetValue(str(t1bl))

    def OnTIEnter(self, event):  # wxGlade: ScanSelectionFrame.<event_handler>
        global ti
        tti=self.text_ctrl_TI.GetValue()
        try:
            tti=[int(i) for i in tti.split(',')]
        except ValueError:
            print "Invalid TI values entered."
            self.text_ctrl_TI.SetValue(','.join(str(x) for x in ti))
        if len(tti) == nti:
            ti=tti[:]
            print "New TI values:", ti
        else:
            print "Amount of entered TIs does not match the chosen amount of inversion times."
            self.text_ctrl_TI.SetValue(','.join(str(x) for x in ti))

    def T2_noise_check(self, event):  # wxGlade: ScanSelectionFrame.<event_handler>
        global t2noise
        t2noise=self.checkbox_T21.GetValue()

    def T2_nonoise(self, event):  # wxGlade: ScanSelectionFrame.<event_handler>
        global t2nonoise
        t2nonoise=self.checkbox_T22.GetValue()

    def fit_diffusion(self, event):  # wxGlade: ScanSelectionFrame.<event_handler>
        global dtifit
        dtifit=self.checkbox_DTI1.GetValue()

    def correct_ec(self, event):  # wxGlade: ScanSelectionFrame.<event_handler>
        global ec
        ec=self.checkbox_EC.GetValue()

    def OnProcess(self, event):  # wxGlade: ScanSelectionFrame.<event_handler>
        print "Attempting to process %r images." %len(filelist)
        processAll(filelist, t1_cbf, t1bl, ti, t2noise, t2nonoise)

    def OnBrowseText(self, event):  # wxGlade: ScanSelectionFrame.<event_handler>
        global filelist
        curdir=self.browse_box.GetValue()
#        self.browse_box.SetValue(curdir)
        os.chdir(curdir)
        filelist = np.array([x.replace('.img', '') for x in glob.glob('*.img')])
        scanlist = np.array(list_scans())
        self.scanlist.Set(filelist)
        self.scantypes.Set(scanlist)

    def OnBrowse(self,event):
        global filelist
        curdir=loadDir(self, "Select scan directory.")
        self.browse_box.SetValue(curdir)
        os.chdir(curdir)
        filelist = np.array([x.replace('.img', '') for x in glob.glob('*.img')])
        scanlist = np.array(list_scans())
        self.scanlist.Set(filelist)
        self.scantypes.Set(scanlist)

# end of class ScanSelectionFrame
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    wxScanSelection = ScanSelectionFrame(None, wx.ID_ANY, "")
    app.SetTopWindow(wxScanSelection)
    wxScanSelection.Show()
    app.MainLoop()